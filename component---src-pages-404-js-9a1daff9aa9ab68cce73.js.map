{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/languageSelect/languageSelect.js","webpack:///./src/components/navigation/navigation.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","prefetchPathname","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_2___default","loader","enqueue","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","useContext","context","Error","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","useStyles","makeStyles","bgOption","color","useNativeSelectStyles","root","display","flexWrap","select","padding","fontSize","icon","LanguageSelect","nativeSelectStyles","optionsStyles","_React$useState","useState","language","setLanguage","react_default","NativeSelect","value","onChange","event","target","classes","inputProps","aria-label","className","flexGrow","margin","link","textDecoration","headerContainer","alignSelf","Navigation","siteTitle","AppBar","style","backgroundColor","Box","width","maxWidth","Toolbar","gatsby_browser_entry","to","Button","Header","Layout","_856328897","header","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-404-js-9a1daff9aa9ab68cce73.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles(() => ({\n  bgOption: {\n    color: 'black',\n  },\n}));\n\nconst useNativeSelectStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  select: {\n    padding: 0,\n    color: 'white',\n    fontSize: '17px',\n  },\n  icon: {\n    display: 'none',\n  },\n}));\n\nexport default function LanguageSelect() {\n  const nativeSelectStyles = useNativeSelectStyles();\n  const optionsStyles = useStyles();\n  const [language, setLanguage] = React.useState('RU');\n\n  const handleChange = () => (event) => {\n    setLanguage(event.target.value);\n  };\n\n  return (\n    <NativeSelect\n      value={language}\n      onChange={handleChange('language')}\n      name=\"language\"\n      classes={nativeSelectStyles}\n      inputProps={{ 'aria-label': 'language' }}\n    >\n      <option className={optionsStyles.bgOption} value=\"EN\">EN</option>\n      <option className={optionsStyles.bgOption} value=\"RU\">RU</option>\n      <option className={optionsStyles.bgOption} value=\"BY\">BY</option>\n    </NativeSelect>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar, Toolbar, Button, Box,\n} from '@material-ui/core';\nimport { Link } from 'gatsby';\nimport LanguageSelect from '../languageSelect/languageSelect';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none',\n  },\n  headerContainer: {\n    alignSelf: 'center',\n  },\n}));\n\nexport default function Navigation({ siteTitle }) {\n  const classes = useStyles();\n\n\n  Navigation.propTypes = {\n    siteTitle: PropTypes.string,\n  };\n\n  Navigation.defaultProps = {\n    siteTitle: '',\n  };\n\n  return (\n    <AppBar style={{ backgroundColor: '#008080' }}>\n      <Box className={classes.headerContainer} width=\"100%\" maxWidth={1800}>\n        <Toolbar>\n          <h1 className={classes.title}>\n            <Link to=\"/\" className={classes.link}>\n              {siteTitle}\n            </Link>\n          </h1>\n          <Button color=\"inherit\">\n            <Link to=\"/\" className={classes.link}>\n              HOME\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            <Link to=\"/authors_list/\" className={classes.link}>\n              LIST OF DIRECTORS\n            </Link>\n          </Button>\n          <LanguageSelect />\n        </Toolbar>\n      </Box>\n    </AppBar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Navigation from '../navigation/navigation';\n\nconst Header = ({ siteTitle }) => (\n  <Navigation siteTitle={siteTitle} />\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header/header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n      <footer>\n        ©\n        {' '}\n        {new Date().getFullYear()}\n    , Built with\n        {' '}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}